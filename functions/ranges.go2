package functions

// IntRange generates a range from start -> end inclusive
func IntRange(start, end int) []int {
    // end + 1 because we generate _inclusive_ ranges
    out := make([]int, end+1-start)
    idx := 0
    for i := start; i <= end; i++ {
        out[idx] = i
        idx++
    }
    return out
}

// Generate a range of any number type with increments of 1
func Range(type T Number) (start, end T) []T {
    // end + 1 because we generate _inclusive_ ranges
    out := make([]T, int(end)+1-int(start))
    idx := 0
    for i := start; i <= end; i++ {
        out[idx] = i
        idx++
    }
    return out
}
